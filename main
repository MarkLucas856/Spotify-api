
import base64
import requests
import json
from secrets import *
import datetime
from refresh import token

playlist_name = "Hi from Python!"
playlist_description = "TEST"


# def get_access_token(client_id, client_secret):   # getting access token from spotify using client ID
#     #  Encoding Client ID and Client Secret in Base64
#     token_url = "https://accounts.spotify.com/api/token"
#     client_creds = f"{client_id}:{client_secret}"
#     client_creds_b64 = base64.b64encode(client_creds.encode())
#
#     request_body = {
#         "grant_type": "authorization_code",
#         "code": "",
#         "redirect_uri": f"{redirect}"
#     }
#     token_headers = {
#         'Authorization': f"Basic {client_creds_b64.decode()}"
#     }
#     r = requests.post(token_url, data=request_body, headers=token_headers)
#
#
#     # valid_request = r.status_code in range(200, 299)
#     token_response_data = r.json()
#     print(json.dumps(token_response_data, indent=2))    # response 200 -> successful attempt
#     # if valid_request:
#     now = datetime.datetime.now()
#     access_token = token_response_data['access_token']
#     refresh_token = token_response_data['refresh_token']
#     print(refresh_token)
#     expires_in = token_response_data['expires_in']
#     expires = now+datetime.timedelta(seconds=expires_in)
#     did_expire = expires < now
#     return access_token
#

# get_access_token(client_id, client_secret)

def get_playlist_data(token, playlist_id):
    playlist_end_point = f"https://api.spotify.com/v1/playlists/{playlist_id}"
    get_header = {
        "Authorization": f"Bearer {token}"
    }
    res = requests.get(playlist_end_point, headers=get_header)
    playlist_object = res.json()
    return playlist_object


def update_metadata(token, playlist_id, playlist_name, playlist_description):
    playlist_endpoint = f"https://api.spotify.com/v1/playlists/{playlist_id}"
    metadata = {
            "name": playlist_name, "description": playlist_description, "public": True
    }
    get_headers = {
        "Accept": "application/json",
        "Content-Type": "application/json",
        "Authorization": f"Bearer {token}"
    }
    res = requests.put(playlist_endpoint, headers=get_headers, json=metadata)

    if res.status_code == 200:
        print("'" + playlist_name + "'" + " playlist metadata successfully updated.\n")
    else:
        print('Failed to update ' + playlist_name + ' metadata. \n Error code: ' + res.status_code)
    return res


update_metadata(token, playlist_id, playlist_name, playlist_description)
playlist_data = get_playlist_data(token, playlist_id)

# Printing playlist name and description
print("Playlist name: " + playlist_data['name'] + "\nDescription: " + playlist_data['description'])
print("\nTracks: \n")

# Looping through playlist data to print artist and song names
for songs in playlist_data['tracks']['items']:
    for a in songs['track']['artists']:
        print("Artist: " + a['name'])
    artist = songs['track']['artists'][0]
    song_name = songs['track']['name']
    print("Title: " + song_name)
    print('------------------')


