
import base64
import requests
import json
from secrets import *
import datetime
from refresh_access_token import token


def get_access_token(client_id, client_secret):   # getting access token from spotify using client ID
    #  Encoding Client ID and Client Secret in Base64
    token_url = "https://accounts.spotify.com/api/token"
    client_creds = f"{client_id}:{client_secret}"
    client_creds_b64 = base64.b64encode(client_creds.encode())

    request_body = {
        "grant_type": "authorization_code",
        "code": "YOUR CODE",
        "redirect_uri": f"{redirect}"
    }
    token_headers = {
        'Authorization': f"Basic {client_creds_b64.decode()}"
    }
    r = requests.post(token_url, data=request_body, headers=token_headers)


    # valid_request = r.status_code in range(200, 299)
    token_response_data = r.json()
    print(json.dumps(token_response_data, indent=2))    # response 200 -> successful attempt
    # if valid_request:
    now = datetime.datetime.now()
    access_token = token_response_data['access_token']
    
    # Copy/paste this refresh token into the secrets file
    refresh_token = token_response_data['refresh_token'] 
    print(refresh_token)
    expires_in = token_response_data['expires_in']
    expires = now+datetime.timedelta(seconds=expires_in)
    did_expire = expires < now
    return access_token


get_access_token(client_id, client_secret)
